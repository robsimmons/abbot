(library
 (name abbot_examples)
 (public_name abbot.examples)
 (preprocess (pps ppx_jane))
 (libraries
  abbot_runtime
  core))

;; CR wduff: Uncomment these and fix symbols.
; (rule
;  (targets
;   minalgol_intf.ml
;   minalgol.mli
;   minalgol.ml
;   minalgol.sig
;   minalgol.sml)
;  (deps
;   (:abbot ../bin/main.exe)
;   (:example minalgol.abt))
;  (action
;   (progn
;    (run %{abbot} ocaml %{example})
;    (run %{abbot} sml %{example}))))

; (rule
;  (targets
;   minalgol_external_side_intf.ml
;   minalgol_external_side.mli
;   minalgol_external_side.ml
;   minalgol_external_side.sig
;   minalgol_external_side.sml)
;  (deps
;   (:abbot ../bin/main.exe)
;   (:example minalgol_external_side.abt))
;  (action
;   (progn
;    (run %{abbot} ocaml %{example})
;    (run %{abbot} sml %{example}))))

(rule
 (targets
  pcfpat_intf.ml
  pcfpat.mli
  pcfpat.ml
  pcfpat.sig
  pcfpat.sml)
 (deps
  (:abbot ../bin/main.exe)
  (:example pcfpat.abt))
 (action
  (progn
   (run %{abbot} ocaml %{example})
   (run %{abbot} sml %{example}))))

(rule
 (targets
  pcfpatgeneral_intf.ml
  pcfpatgeneral.mli
  pcfpatgeneral.ml
  pcfpatgeneral.sig
  pcfpatgeneral.sml)
 (deps
  (:abbot ../bin/main.exe)
  (:example pcfpatgeneral.abt))
 (action
  (progn
   (run %{abbot} ocaml %{example})
   (run %{abbot} sml %{example}))))

;; CR wduff: Uncomment this and fix support for internal parameterized abts.
; (rule
;  (targets
;   internal_parameterized_abt_intf.ml
;   internal_parameterized_abt.mli
;   internal_parameterized_abt.ml
;   internal_parameterized_abt.sig
;   internal_parameterized_abt.sml)
;  (deps
;   (:abbot ../bin/main.exe)
;   (:example internal_parameterized_abt.abt))
;  (action
;   (progn
;    (run %{abbot} ocaml %{example})
;    (run %{abbot} sml %{example}))))

(rule
 (targets
  system_f_intf.ml
  system_f.mli
  system_f.ml
  system_f.sig
  system_f.sml)
 (deps
  (:abbot ../bin/main.exe)
  (:example system_f.abt))
 (action
  (progn
   (run %{abbot} ocaml %{example})
   (run %{abbot} sml %{example}))))

(rule
 (targets
  semio_typed_intf.ml
  semio_typed.mli
  semio_typed.ml)
 (deps
  (:abbot ../bin/main.exe)
  (:example semio_typed.abt))
 (action
  (progn
   (run %{abbot} ocaml %{example}))))

(rule
 (alias install)
 (action (bash "echo \"\" | sml ../sml_runtime/abbot_runtime.cm *.{sig,sml}"))
 (deps
  (glob_files "../sml_runtime/*")
  (glob_files "*.sig")
  (glob_files "*.sml")))
